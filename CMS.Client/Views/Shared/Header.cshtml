<link href="https://cdn.jsdelivr.net/npm/simple-datatables@latest/dist/style.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-alpha1/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<script src="https://use.fontawesome.com/releases/v6.1.0/js/all.js" crossorigin="anonymous"></script>

@{
    var cookies = Context.Request.Cookies;

}

<nav class="sb-topnav navbar navbar-expand navbar-light bg-light fixed-top">
    <div class="container-fluid ">
        <button class="btn btn-link btn-sm order-1 order-lg-0 me-4 me-lg-0 btn-spacing" id="sidebarToggle" href="#!">
            <i class="fas fa-bars"></i>
        </button>
        <nav class="navbar navbar-light bg-light">
            <a class="navbar-brand " href="/">
                <img src="https://cmshn.fpt.edu.vn/pluginfile.php/1/core_admin/logocompact/0x70/1697438386/2020-FPTU-Eng.png"
                     width="100" height="30" class="d-inline-block align-top" alt="">
            </a>
        </nav>

        <button class="navbar-toggler " type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
                aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse ms-5" id="navbarSupportedContent">
            <ul class="navbar-nav mb-2 mb-lg-0 ms-auto">

                @{
                    var userJson = Context.Session.GetString("user");

                    var refreshTokenExpiration_raw = Context.Request.Cookies["refreshTokenExpires"];
                    var refreshTokenExpiration = DateTime.Now;
                    if (!string.IsNullOrEmpty(refreshTokenExpiration_raw))
                    {
                        refreshTokenExpiration = Convert.ToDateTime(refreshTokenExpiration_raw.ToString());
                    }

                    var refreshToken = Context.Request.Cookies["refreshToken"];
                    var accessToken = Context.Request.Cookies["accessToken"];

                }
                <li class="nav-item ms-auto">
                    @if (refreshToken is null || refreshTokenExpiration <= DateTime.Now || string.IsNullOrEmpty(userJson))
                    {
                        <a class="nav-link text-dark" asp-area="" asp-controller="Authenticate" asp-action="Login">
                            <i class="fa fa-unlock-alt" aria-hidden="true"></i> LOGIN
                        </a>
                    }
                    else
                    {
                        if (!string.IsNullOrEmpty(accessToken))
                        {
                            dynamic user = Newtonsoft.Json.JsonConvert.DeserializeObject(userJson);
                            <div class="btn-group">
                                <button type="button" style="border-radius: 4px"
                                class="btn btn-outline-dark dropdown-toggle py-2 px-4" data-toggle="dropdown"
                                aria-expanded="false">
                                    <span class="font-weight-bold" style="font-size: 16px"> @user.fullName</span>
                                </button>
                                <ul class="dropdown-menu menuScroll">
                                    <li class="nav-item ">
                                        <a href="/Accounts/Profile" class="text-black">
                                            <i class="fa fa-user" aria-hidden="true"></i> Profile
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="Authenticate/Logout">Đăng xuất</a>
                                    </li>
                                </ul>
                            </div>
                        }
                        else
                        {
                            Console.WriteLine("access null or expired access");
                        }
                    }
                </li>
            </ul>
        </div>
    </div>
</nav>

<script>


    function getCookieValueByName(name) {
        var cookies = {
    @foreach (var cookie in Context.Request.Cookies)
    {
        <text>"@cookie.Key": "@cookie.Value", </text>
    }
                                                };

    // Kiểm tra xem cookie có tồn tại không
    if (cookies[name]) {
        // Trích xuất giá trị từ chuỗi JSON (loại bỏ các ký tự đặc biệt như `&#x2B;`)
        var value = cookies[name].replace(/&#x2B;/g, '+');
        return value; // Trả về giá trị của cookie
    } else {
        return null; // Trả về null nếu không tìm thấy cookie
    }
                                            }



    // Hàm để kiểm tra thời gian hết hạn của accessToken
    function checkTokenExpiration() {

        var refreshTokenExpires = getCookieValueByName('refreshTokenExpires');
        var currentTime = new Date().toUTCString();

        var expirationDate = new Date(refreshTokenExpires);

        // So sánh thời gian hiện tại với thời gian hết hạn của refreshToken
        var currentTime = new Date();

        if (expirationDate <= currentTime) {
            // Nếu refreshToken đã hết hạn, chuyển hướng đến trang đăng nhập
            window.location.href = "/Authenticate/Login";

        } else {
            var accessToken = getCookieValueByName('accessToken');

            if (accessToken === null || accessToken === "") {
                refreshToken();
                window.location.reload();
            } else {
                console.log("kaka")
            }
        }

    }

    // Hàm gọi API refreshToken
    function refreshToken() {
        // Lưu ý: Cần thay đổi URL và dữ liệu gửi đi cho phù hợp với API của bạn
        var refreshToken = getCookieValueByName('refreshToken');
        $.ajax({
            url: "https://localhost:7149/api/Authenticates/refreshToken",
            type: "POST",
            dataType: 'json',
            contentType: "application/json",
            data: JSON.stringify({ refreshToken: refreshToken }), // Dữ liệu gửi đi là refreshToken
            success: function (response) {
                var newAccessToken = response.data.accessToken;
                var newAccessTokenExpires = response.data.accessTokenExpires;
                var expiresDate = new Date(newAccessTokenExpires);
                var expiresString = expiresDate.toUTCString();
                // Cập nhật lại accessToken và thời gian hết hạn của accessToken lên cookie
                document.cookie = "accessToken=" + newAccessToken + "; expires=" + expiresString + "; path=/";
            },
            error: function (xhr, status, error) {
                console.error("Error refreshing token:", error);
            }
        });
    }



    $(document).ready(function () {
        // Kiểm tra thời gian hết hạn của accessToken mỗi 5s
        setInterval(checkTokenExpiration, 5 * 60 * 1000); // Đơn vị tính là milliseconds
    });

</script>




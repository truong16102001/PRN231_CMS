@{
    ViewData["Title"] = "Courses";
}

@{
    Layout = null;
}

@using BusinessObject.Models
@using Newtonsoft.Json;
@using X.PagedList.Mvc.Core
@using X.PagedList
@using X.PagedList.Mvc
@model X.PagedList.IPagedList<BusinessObject.Models.Course>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Courses</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/home.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/styles.css" asp-append-version="true" />

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/css/bootstrap.css">



    <style>


        .content-wrapper {
            margin-left: 250px; /* Điều chỉnh giá trị này tùy thuộc vào kích thước của leftboard */
            margin-top: 80px;
        }

        li.nav-item a.active {
            color: blue;
            font-weight: bold;
        }

        li.nav-item a {
            color: black;
        }

        .form-select option {
            background-color: transparent;
        }

        .input-container {
            position: relative;
            display: inline-block;
        }

            .input-container input[type="text"] {
                padding-right: 30px;
            }

        .clear-icon {
            position: absolute;
            top: 50%;
            color: red;
            right: 10px;
            transform: translateY(-50%);
            cursor: pointer;
            display: none;
        }

        .input-container:hover .clear-icon {
            display: block;
        }

        .product-item {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 0 10px rgb(0 0 0);
            text-align: center;
        }

        .product-thumb {
            width: 180px;
            height: 250px;
        }

        .product-name {
            font-size: 14px;
        }

        .modal-backdrop {
            opacity: 0.5 !important; /* Điều chỉnh mức độ trong suốt của nền modal */
        }

        .modal {
            z-index: 1050 !important; /* Đảm bảo modal hiển thị trên cùng của nền */
        }
    </style>
</head>

<body class="sb-nav-fixed">
    @await Html.PartialAsync("~/Views/Shared/Header.cshtml")

    <div id="layoutSidenav">
        <div id="page-wrapper">
            @Html.Partial("~/Views/Shared/Notifications.cshtml")

            @{
                var userJson = Context.Session.GetString("user");
            }
            @if (!string.IsNullOrEmpty(userJson))
            {
                @Html.Partial("~/Views/Shared/Leftboard.cshtml")

                var user = Newtonsoft.Json.JsonConvert.DeserializeObject<User>(userJson);

                <div id="layoutSidenav_content" class="content-wrapper">
                    <div class="container-fluid px-4">
                        <div class="row justify-content-between mt-3 mb-3">

                            <div class="col-md-3 d-flex align-items-end">
                                <!-- Thêm class "d-flex align-items-end" để căn chỉnh nút "Add" cùng hàng với select -->
                                <button type="button" onclick="" class="btn btn-primary mr-2">+Add</button>
                                <select id="course-filter-select" class="form-select " onchange="handleFilter()">
                                    <option class="text-center" value="-1" selected="@(ViewBag.FilterType == null || ViewBag.FilterType == -1 ? true: false)">
                                        All
                                    </option>
                                    <option class="text-center" value="@user.UserId" selected="@(ViewBag.FilterType != null && ViewBag.FilterType == user.UserId ? true : false)">
                                        My Courses
                                    </option>
                                </select>
                            </div>

                            <div class="col-md-4">
                                <div class="input-container">
                                    <input id="myInput1" class="form-control" type="text" name="key" value="@ViewBag.Key"
                                       placeholder="Search courses...">
                                    <span class="clear-icon" onclick="clearInput()">X</span>
                                </div>
                                <button type="button" onclick="handleFilter()" class="btn btn-primary">Search</button>
                            </div>



                            <div class="col-md-3">
                                <select id="sort-select" class="form-select" onchange="handleFilter()">
                                    <option class="text-center" value="sortBy=name&sortValue=asc" selected="@(ViewBag.Sort == "sortBy=name&sortValue=asc" ? true:false)">
                                        A -> Z
                                    </option>
                                    <option class="text-center" value="sortBy=name&sortValue=desc" selected="@(ViewBag.Sort == "sortBy=name&sortValue=desc" ? true:false)">
                                        Z -> A
                                    </option>
                                </select>
                            </div>

                        </div>

                        <div class="row mt-3 mb-3">
                            @if (Model != null && Model.Any())
                            {

                                for (int i = 0; i < Model.Count; i++)
                                {
                                    var course = Model[i];

                                    <div class="card col-md-3 col-sm-6 product-down" style="border-radius: 10px; box-shadow: 0 0 10px rgb(0 0 0)">
                                        <div style="background-color: @course.Image; width: 100%; height: 100px" class="card-img-top"> </div>
                                        <div class="card-body">
                                            <h6 class="card-title" style="color:red; font-weight:bold">@course.CourseName</h6>
                                            @*<p class="card-text">@course.CourseDescription</p>*@
                                        </div>
                                        <ul class="list-group list-group-flush">
                                            <li class="list-group-item">Cras justo odio</li>
                                            <li class="list-group-item">Dapibus ac facilisis in</li>
                                        </ul>
                                        <div class="card-body d-flex justify-content-center">
                                            <button type="button" class="btn btn-outline-primary" style="height:40px; width:100px;"
                                        onclick="handleRegisterClicked('@course.CourseId')">
                                                Register
                                            </button>
                                        </div>
                                    </div>
                                }
                            }
                        </div>

                        <div class="row justify-content-center">
                            <div class="col-4">
                                <div class="pagination bg-light" style=" width:200px">
                                    @Html.PagedListPager(Model, page => Url.Action("Index",
                                new{key=ViewBag.Key, sortBy = ViewBag.SortBy, sortValue = ViewBag.SortValue,  page }))
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Enroll Modal -->
    <div class="modal" id="enrollModal" tabindex="-1" role="dialog" aria-labelledby="editModel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalCenterTitle">Register Course</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="enrollForm" action="/Course/Register" method="post">
                        <div class="mb-3">
                            <label for="courseId" class="col-form-label">Course Id:</label>
                            <input id="courseId" type="text" class="form-control" name="CourseId" readonly />
                        </div>
                        <div class="mb-3">
                            <label for="editedCourseName" class="col-form-label">Course Name:</label>
                            <input type="text" class="form-control" id="editedCourseName" name="EditedCourseName">
                        </div>
                        <div class="mb-3">
                            <label for="editedCourseDescription" class="col-form-label">Course Description:</label>
                            <input class="form-control" id="editedCourseDescription" name="EditedCourseDescription" type="text" row="3" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" onclick="handleSubmit()">Register</button>
                </div>
            </div>
        </div>
    </div>


    <script>
        // Function to handle change event of the select element
        function handleFilter() {
            var url = "/Course";
            var filterTypeValue = document.getElementById("course-filter-select").value;

            if (filterTypeValue != -1) url += "?filterType=" + filterTypeValue;

            var keyInput = document.getElementById("myInput1").value.trim();
            if (keyInput != null && keyInput != "") {
                if (url.includes("?")) {
                    url += "&key=" + encodeURIComponent(keyInput);

                } else {
                    url += "?key=" + encodeURIComponent(keyInput);
                }
            }
            var sort = document.getElementById("sort-select").value;

            if (url.includes("?")) url += "&" + sort;
            else url += "?" + sort;
            window.location.href = url;
        }


    </script>

    <script>

        function clearInput() {
            document.getElementById("myInput1").value = "";
        }
    </script>

    <script>
        function handleRegisterClicked(courseId) {
            var userJson = "@userJson";
            if (userJson === null || userJson === "") {
                window.location.href = "/Authenticate/Login";
            } else {
                // Gọi API GetCourseById để lấy thông tin về khóa học
                $.ajax({
                    url: 'https://localhost:7149/api/Courses/' + courseId,
                    type: 'GET',
                    dataType: 'json',
                    contentType: "application/json",
                    success: function (data) {
                        // Điền dữ liệu vào các trường của modal "Enroll"
                        $('#editedCourseName').val(data.courseName);
                        $('#editedCourseDescription').val(data.courseDescription);
                        $('input[name=CourseId]').val(courseId);
                        // Hiển thị modal "Enroll"
                        $('#enrollModal').modal('show');
                    },
                    error: function () {
                        // Xử lý lỗi nếu không thể lấy được dữ liệu khóa học
                        alert('Error occurred while retrieving course information.');
                    }
                });
            }
        }

        function handleSubmit() {
            document.getElementById("enrollForm").submit();
        }
    </script>

</body>
</html>
